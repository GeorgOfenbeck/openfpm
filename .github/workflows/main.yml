name: OpenFPM_CI

on:
  pull_request:
  push:
    branches:
      - master
  release:

jobs:
  build_almalinux:
    runs-on: ubuntu-latest
    container: almalinux:8.5
    steps:
      - name: Install dependencies
        run: |
          yum install -y openssh-clients cmake wget git gcc-c++ gcc-gfortran python39 bzip2 diffutils zlib-devel rpm-build
          ln -s /usr/bin/python3 /usr/bin/python
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Restore Cache dependencies
        uses: actions/cache/restore@v3
        with:
          path: ~/openfpm_dependencies/
          key: almalinux-dep-${{ github.ref }}
      - name: Setup Ccache
        run: |
          wget https://github.com/ccache/ccache/releases/download/v4.8/ccache-4.8-linux-x86_64.tar.xz
          tar -xvf ccache-4.8-linux-x86_64.tar.xz -C ~
          export PATH="~/ccache-4.8-linux-x86_64/ccache:$PATH"
      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")
      - name: ccache cache files
        uses: actions/cache@v3
        with:
          path: $HOME/.ccache
          key: ${{ matrix.config.name }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            ${{ matrix.config.name }}-ccache-
      - name: Build
        run: |
          export PATH="~/ccache-4.8-linux-x86_64/ccache:$PATH"
          ./build.sh $(pwd) unused pdata 0 ${{ github.ref }}
          ln -s ./LICENSE.md bsd3.txt
          ln -s ./README.md README.txt
          cd build
          printf " -DCPACK_RUN_INSTALL_DEPENDENCIES=ON" >> cmake_build_options;
          bash cmake_build_options;
          echo "Calling CPACK"
          cpack -G RPM centos
          if [ $? -ne 0 ]; then
            echo "Error creating package"
            exit 1
          fi
          mv openfpm_pdata-$ofp_version-Linux.rpm openfpm-$ofp_version-nightly-Linux-$version.rpm
      - uses: actions/cache/save@v3
        if: always()
        with:
          path: ~/openfpm_dependencies/
          key: almalinux-dep-${{ github.ref }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: openfpm_macos
          path: build/openfpm-$ofp_version-nightly--Linux-$version.rpm

  build_macos:
    runs-on: macos-latest
    steps:
      - name: Setup GNU Fortran
        uses: modflowpy/install-gfortran-action@v1
      - name: Install dependencies
        run: |
          brew install cmake wget gcc gnu-sed
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
      - name: Restore Cache dependencies
        uses: actions/cache/restore@v3
        with:
          path: ~/openfpm_dependencies/
          key: macos-dep-${{ github.ref }}
      - name: Build & Pack
        run: |
          export CC=gcc-12
          export CXX=g++-12
          ./build.sh $(pwd) unused pdata 0 ${{ github.ref }}
          ln -s ./LICENSE.md bsd3.txt
          ln -s ./README.md README.txt
          cd build
          printf " -DCPACK_RUN_INSTALL_DEPENDENCIES=ON" >> cmake_build_options;
          bash cmake_build_options;
          echo "Calling CPACK"
          cpack -G productbuild osx
          if [ $? -ne 0 ]; then
            echo "Error creating package"
            exit 1
          fi
          mv openfpm_pdata-$ofp_version-Darwin.pkg openfpm-$ofp_version-nightly-Darwin-$version.pkg
      - uses: actions/cache/save@v3
        if: always()
        with:
          path: ~/openfpm_dependencies/
          key: macos-dep-${{ github.ref }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: openfpm_macos
          path: build/openfpm-$ofp_version-nightly-Darwin-$version.pkg
