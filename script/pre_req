#! /bin/bash

source script/discover_package_manager

platform=unknown


if [[ "$OSTYPE" == "linux-gnu" ]]; then
        echo -e "We are on\033[1;34m LINUX \033[0m"
        platform=linux
elif [[ "$OSTYPE" == "darwin"* ]]; then
        echo -e "We are on\033[1;34m MAC OSX \033[0m"
        platform=osx
elif [[ "$OSTYPE" == "cygwin" ]]; then
        echo -e "We are on\033[1;34m CYGWIN \033[0m"
        echo "This platform is not supported"
        exit 1
elif [[ "$OSTYPE" == "msys" ]]; then
        echo -e "We are on\033[1;34m Microsoft Window \033[0m"
        echo "This platform is not supported"
        exit 1
elif [[ "$OSTYPE" == "win32" ]]; then
        echo -e "We are on\033[1;34m Microsoft Window \033[0m"
        echo "This platform is not supported"
        exit 1
elif [[ "$OSTYPE" == "freebsd"* ]]; then
        echo -e "We are on\033[1;34m FREEBSD \033[0m"
        echo "This platform is not supported"
        exit 1
else
        echo -e "We are on an\033[1;34m unknown OS \033[0m"
        echo "This platform is not supported"
        exit 1
fi

discover_package_manager $platform
pcman=discover_package_manager_ret

if [ x"$platform" = x"osx"  -a  x"$pcman" = x"" ]; then
  echo -e "\033[93;5;1m WARNING \033[0m No package manager has been found on this system"
fi

command -v wget >/dev/null 2>&1
if [ $? -ne 0 ]; then
  echo >&2
  echo -e "wget\033[91;5;1m FAILED \033[0m"
  echo "OpenFPM require wget but it's not installed, searching a solution... "
  script/solve_wget $platform
  command -v wget >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo -e "wget\033[91;5;1m FAILED \033[0m"
    exit 1
  else
    echo -e "wget\033[92;1m SUCCESS \033[0m"
  fi
else
  echo -e "wget\033[92;1m SUCCESS \033[0m"
fi

command -v git >/dev/null 2>&1
if [ $? -ne 0 ]; then 
  echo >&2
  echo -e "git\033[91;5;1m FAILED \033[0m"
  echo "OpenFPM require git but it's not installed, searching a solution... "
  script/solve_git $platform
  command -v git >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo -e "git\033[91;5;1m FAILED \033[0m"
    exit 1
  else
    echo -e "git\033[92;1m SUCCESS \033[0m"
  fi
else
  echo -e "git \033[92;1m SUCCESS \033[0m"
fi

command -v autoconf >/dev/null 2>&1
if [ $? -ne 0 ]; then
  echo >&2
  echo -e "autoconf\033[91;5;1m FAILED \033[0m"
  echo "OpenFPM require autoconf but it's not installed, searching a solution..."
  script/solve_autoconf $platform
  command -v autoheader >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo -e "autoconf\033[91;5;1m FAILED \033[0m"
    exit 1
  else
    echo -e "autoconf\033[92;1m SUCCESS \033[0m"
  fi
else
  echo -e "autoconf\033[92;1m SUCCESS \033[0m"
fi

command -v automake >/dev/null 2>&1
if [ $? -ne 0 ]; then
  echo >&2
  echo -e "automake\033[91;5;1m FAILED \033[0m"
  echo "OpenFPM require automake but it's not installed, searching a solution..."
  script/solve_automake $platform
  command -v automake >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo "automake\033[91;5;1m FAILED \033[0m"
    exit 1
  else
    echo -e "automake\033[92;1m SUCCESS \033[0m"
  fi
else
  echo -e "automake\033[92;1m SUCCESS \033[0m"
fi

command -v libtool >/dev/null 2>&1
if [ $? -ne 0 ]; then
  echo >&2
  echo -e "libtool\033[91;5;1m FAILED \033[0m"
  echo "OpenFPM require libtool but it's not installed, searching a solution..."
  script/solve_libtool $platform
  command -v libtool >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo -e "libtool\033[91;5;1m FAILED \033[0m"
    exit 1
  else
    echo -e "libtool\033[92;1m SUCCESS \033[0m"
  fi
else
  echo -e "libtool\033[92;1m SUCCESS \033[0m"
fi

command -v g++ >/dev/null 2>&1
if [ $? -ne 0 ]; then
  echo >&2
  echo -e "Configure\033[91;5;1m FAILED \033[0m"
  echo "OpenFPM require g++ but it's not installed, searching a solution..."
  script/solve_gpp $platform
  command -v g++ >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo -e "g++\033[91;5;1m FAILED \033[0m"
    exit 1
  else
    echo -e "g++\033[92;1m SUCCESS \033[0m"
  fi
else
  echo -e "g++\033[92;1m SUCCESS \033[0m"
fi


